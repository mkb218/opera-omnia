endpoints:
/ - displays static page. list recent requests, ask for uploads to corpus or for requests (by uploading, or by searching).
/search - displays search results. mark those that already have results
/listen - lists recently published requests, stream on page
/queue - see queued up requests, with progress indicated. errors stick around for a while
/upload - accepts posts, redirects to queue page with request highlighted.
/admin - ability to delete things from corpus that shouldn't be there, requires login!

background tasks:
resolvers: go through tatums of requests and uploads, resolving characteristics from segments
twitter announce: duh
soundcloud publish: upload X popular requests to soundcloud page every day
soundcloud ingest: take downloadable, remixable, public audio from followers
request processor: select tatums from corpus and assemble
- fetch audio files that are members of corpus, if not present in durable corpus, byte ranges if possible
- timestretch closest tatum to fit timebox
- normalize peak loudness to match that of source tatum
upload processor: store audio of corpus-bound uploads only (include soundcloud)
- store in datastore
FMA ingest: suck down FMA IDs, ask for analysis from echonest
monitor: expire old corpus samples
- expire old requests
- spin up or kill resolvers, request processors, upload processors based on configuration file parameters

UPLOAD TO CORPUS: 
- separate audio into tatums
- how to resolve segment characteristics to tatums?
* tatums of len 5
* if a tatum is composed of a single segment, easy
* if a tatum contains multiple segments: multiply all interesting bits by (segment length inside tatums) / (total beat length) and sum
* store peak loudness